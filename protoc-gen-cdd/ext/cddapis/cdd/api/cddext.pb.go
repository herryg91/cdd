// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: cdd/api/cddext.proto

package cddext

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Authentication
type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Needauth      bool                   `protobuf:"varint,130001,opt,name=needauth,proto3" json:"needauth,omitempty"`
	Needapikey    bool                   `protobuf:"varint,130002,opt,name=needapikey,proto3" json:"needapikey,omitempty"`
	Roles         []string               `protobuf:"bytes,130003,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_cdd_api_cddext_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_cdd_api_cddext_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_cdd_api_cddext_proto_rawDescGZIP(), []int{0}
}

func (x *Auth) GetNeedauth() bool {
	if x != nil {
		return x.Needauth
	}
	return false
}

func (x *Auth) GetNeedapikey() bool {
	if x != nil {
		return x.Needapikey
	}
	return false
}

func (x *Auth) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// DB: Mysql
type Mysql struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	DbModel                  bool                   `protobuf:"varint,110001,opt,name=db_model,json=dbModel,proto3" json:"db_model,omitempty"`
	TableName                string                 `protobuf:"bytes,110002,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	DisableTimestampTracking bool                   `protobuf:"varint,110003,opt,name=disable_timestamp_tracking,json=disableTimestampTracking,proto3" json:"disable_timestamp_tracking,omitempty"`
	EnableSoftDelete         bool                   `protobuf:"varint,110004,opt,name=enable_soft_delete,json=enableSoftDelete,proto3" json:"enable_soft_delete,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Mysql) Reset() {
	*x = Mysql{}
	mi := &file_cdd_api_cddext_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mysql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mysql) ProtoMessage() {}

func (x *Mysql) ProtoReflect() protoreflect.Message {
	mi := &file_cdd_api_cddext_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mysql.ProtoReflect.Descriptor instead.
func (*Mysql) Descriptor() ([]byte, []int) {
	return file_cdd_api_cddext_proto_rawDescGZIP(), []int{1}
}

func (x *Mysql) GetDbModel() bool {
	if x != nil {
		return x.DbModel
	}
	return false
}

func (x *Mysql) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Mysql) GetDisableTimestampTracking() bool {
	if x != nil {
		return x.DisableTimestampTracking
	}
	return false
}

func (x *Mysql) GetEnableSoftDelete() bool {
	if x != nil {
		return x.EnableSoftDelete
	}
	return false
}

type MysqlField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColumnName    string                 `protobuf:"bytes,120001,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	PrimaryKey    bool                   `protobuf:"varint,120002,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	ColumnType    string                 `protobuf:"bytes,120003,opt,name=column_type,json=columnType,proto3" json:"column_type,omitempty"`
	Nullable      bool                   `protobuf:"varint,120004,opt,name=nullable,proto3" json:"nullable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MysqlField) Reset() {
	*x = MysqlField{}
	mi := &file_cdd_api_cddext_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MysqlField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlField) ProtoMessage() {}

func (x *MysqlField) ProtoReflect() protoreflect.Message {
	mi := &file_cdd_api_cddext_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlField.ProtoReflect.Descriptor instead.
func (*MysqlField) Descriptor() ([]byte, []int) {
	return file_cdd_api_cddext_proto_rawDescGZIP(), []int{2}
}

func (x *MysqlField) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *MysqlField) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *MysqlField) GetColumnType() string {
	if x != nil {
		return x.ColumnType
	}
	return ""
}

func (x *MysqlField) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

var file_cdd_api_cddext_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Mysql)(nil),
		Field:         110000,
		Name:          "cdd.api.mysql",
		Tag:           "bytes,110000,opt,name=mysql",
		Filename:      "cdd/api/cddext.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*MysqlField)(nil),
		Field:         120000,
		Name:          "cdd.api.mysql_field",
		Tag:           "bytes,120000,opt,name=mysql_field",
		Filename:      "cdd/api/cddext.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         121000,
		Name:          "cdd.api.validate",
		Tag:           "bytes,121000,opt,name=validate",
		Filename:      "cdd/api/cddext.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         122000,
		Name:          "cdd.api.default",
		Tag:           "bytes,122000,opt,name=default",
		Filename:      "cdd/api/cddext.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Auth)(nil),
		Field:         130000,
		Name:          "cdd.api.auth",
		Tag:           "bytes,130000,opt,name=auth",
		Filename:      "cdd/api/cddext.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional cdd.api.Mysql mysql = 110000;
	E_Mysql = &file_cdd_api_cddext_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional cdd.api.MysqlField mysql_field = 120000;
	E_MysqlField = &file_cdd_api_cddext_proto_extTypes[1]
	// optional string validate = 121000;
	E_Validate = &file_cdd_api_cddext_proto_extTypes[2]
	// optional string default = 122000;
	E_Default = &file_cdd_api_cddext_proto_extTypes[3]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional cdd.api.Auth auth = 130000;
	E_Auth = &file_cdd_api_cddext_proto_extTypes[4]
)

var File_cdd_api_cddext_proto protoreflect.FileDescriptor

const file_cdd_api_cddext_proto_rawDesc = "" +
	"\n" +
	"\x14cdd/api/cddext.proto\x12\acdd.api\x1a google/protobuf/descriptor.proto\"^\n" +
	"\x04Auth\x12\x1c\n" +
	"\bneedauth\x18\xd1\xf7\a \x01(\bR\bneedauth\x12 \n" +
	"\n" +
	"needapikey\x18\xd2\xf7\a \x01(\bR\n" +
	"needapikey\x12\x16\n" +
	"\x05roles\x18\xd3\xf7\a \x03(\tR\x05roles\"\xb5\x01\n" +
	"\x05Mysql\x12\x1b\n" +
	"\bdb_model\x18\xb1\xdb\x06 \x01(\bR\adbModel\x12\x1f\n" +
	"\n" +
	"table_name\x18\xb2\xdb\x06 \x01(\tR\ttableName\x12>\n" +
	"\x1adisable_timestamp_tracking\x18\xb3\xdb\x06 \x01(\bR\x18disableTimestampTracking\x12.\n" +
	"\x12enable_soft_delete\x18\xb4\xdb\x06 \x01(\bR\x10enableSoftDelete\"\x93\x01\n" +
	"\n" +
	"MysqlField\x12!\n" +
	"\vcolumn_name\x18\xc1\xa9\a \x01(\tR\n" +
	"columnName\x12!\n" +
	"\vprimary_key\x18©\a \x01(\bR\n" +
	"primaryKey\x12!\n" +
	"\vcolumn_type\x18é\a \x01(\tR\n" +
	"columnType\x12\x1c\n" +
	"\bnullable\x18ĩ\a \x01(\bR\bnullable:G\n" +
	"\x05mysql\x12\x1f.google.protobuf.MessageOptions\x18\xb0\xdb\x06 \x01(\v2\x0e.cdd.api.MysqlR\x05mysql:U\n" +
	"\vmysql_field\x12\x1d.google.protobuf.FieldOptions\x18\xc0\xa9\a \x01(\v2\x13.cdd.api.MysqlFieldR\n" +
	"mysqlField:;\n" +
	"\bvalidate\x12\x1d.google.protobuf.FieldOptions\x18\xa8\xb1\a \x01(\tR\bvalidate:9\n" +
	"\adefault\x12\x1d.google.protobuf.FieldOptions\x18\x90\xb9\a \x01(\tR\adefault:C\n" +
	"\x04auth\x12\x1e.google.protobuf.MethodOptions\x18\xd0\xf7\a \x01(\v2\r.cdd.api.AuthR\x04authBCZAgithub.com/herryg91/cdd/protoc-gen-cdd/ext/cddapis/cdd/api;cddextb\x06proto3"

var (
	file_cdd_api_cddext_proto_rawDescOnce sync.Once
	file_cdd_api_cddext_proto_rawDescData []byte
)

func file_cdd_api_cddext_proto_rawDescGZIP() []byte {
	file_cdd_api_cddext_proto_rawDescOnce.Do(func() {
		file_cdd_api_cddext_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cdd_api_cddext_proto_rawDesc), len(file_cdd_api_cddext_proto_rawDesc)))
	})
	return file_cdd_api_cddext_proto_rawDescData
}

var file_cdd_api_cddext_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cdd_api_cddext_proto_goTypes = []any{
	(*Auth)(nil),                        // 0: cdd.api.Auth
	(*Mysql)(nil),                       // 1: cdd.api.Mysql
	(*MysqlField)(nil),                  // 2: cdd.api.MysqlField
	(*descriptorpb.MessageOptions)(nil), // 3: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 4: google.protobuf.FieldOptions
	(*descriptorpb.MethodOptions)(nil),  // 5: google.protobuf.MethodOptions
}
var file_cdd_api_cddext_proto_depIdxs = []int32{
	3, // 0: cdd.api.mysql:extendee -> google.protobuf.MessageOptions
	4, // 1: cdd.api.mysql_field:extendee -> google.protobuf.FieldOptions
	4, // 2: cdd.api.validate:extendee -> google.protobuf.FieldOptions
	4, // 3: cdd.api.default:extendee -> google.protobuf.FieldOptions
	5, // 4: cdd.api.auth:extendee -> google.protobuf.MethodOptions
	1, // 5: cdd.api.mysql:type_name -> cdd.api.Mysql
	2, // 6: cdd.api.mysql_field:type_name -> cdd.api.MysqlField
	0, // 7: cdd.api.auth:type_name -> cdd.api.Auth
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	5, // [5:8] is the sub-list for extension type_name
	0, // [0:5] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cdd_api_cddext_proto_init() }
func file_cdd_api_cddext_proto_init() {
	if File_cdd_api_cddext_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cdd_api_cddext_proto_rawDesc), len(file_cdd_api_cddext_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_cdd_api_cddext_proto_goTypes,
		DependencyIndexes: file_cdd_api_cddext_proto_depIdxs,
		MessageInfos:      file_cdd_api_cddext_proto_msgTypes,
		ExtensionInfos:    file_cdd_api_cddext_proto_extTypes,
	}.Build()
	File_cdd_api_cddext_proto = out.File
	file_cdd_api_cddext_proto_goTypes = nil
	file_cdd_api_cddext_proto_depIdxs = nil
}
